diff -uNrp kde4libs-4.0.0.orig/khtml/rendering/break_lines.cpp kde4libs-4.0.0/khtml/rendering/break_lines.cpp
--- kde4libs-4.0.0.orig/khtml/rendering/break_lines.cpp	2008-01-24 14:16:48.000000000 +0700
+++ kde4libs-4.0.0/khtml/rendering/break_lines.cpp	2008-01-25 13:27:16.000000000 +0700
@@ -69,7 +69,9 @@ namespace khtml {
 	if (( !th_brk ) && thaiCodec  ) {
 	    printf("Try to load libthai dynamically...\n");
             KLibLoader *loader = KLibLoader::self();
-            lib = loader->library(QLatin1String("libthai"));
+            lib = loader->library(QLatin1String("libthai.so.0"));
+	     if ( !lib )
+                lib = loader->library(QLatin1String("/usr/lib/libthai.so.0"));
             if ( lib )
                 th_brk = (th_brk_def) lib->resolveFunction("th_brk");
             if ( !th_brk ) {
@@ -101,8 +103,8 @@ namespace khtml {
 
             cache->numwbrpos = th_brk((const unsigned char*) cstr.data(), cache->wbrpos, cache->allocated);
             //fprintf(stderr,"libthai returns with value %d\n",cache->numwbrpos);
-            if (cache->numwbrpos > cache->allocated) {
-                cache->allocated = cache->numwbrpos;
+            if (cache->numwbrpos >= cache->allocated) {
+                cache->allocated = len;
                 cache->wbrpos = (int *)realloc(cache->wbrpos, cache->allocated*sizeof(int));
                 cache->numwbrpos = th_brk((const unsigned char*) cstr.data(), cache->wbrpos, cache->allocated);
             }
